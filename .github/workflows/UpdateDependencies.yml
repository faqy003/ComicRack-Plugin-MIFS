name: UpdateDependencies

on:
  workflow_dispatch:

env:
  VCPKG_INSTALLED_DIR: vcpkg_installed

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: run-vcpkg
      uses: lukka/run-vcpkg@v10.2
      id: runvcpkg
      with:
          runVcpkgInstall: true
          vcpkgGitCommitId: 'bf43f7d00f09b225f866a5227b8464a27c86a8c0'
        
    - name: setup libavif
      env: 
        PKG_CONFIG_PATH : '${{ github.workspace }}/${{ env.VCPKG_INSTALLED_DIR }}/${{ env.VCPKG_DEFAULT_TRIPLET }}/lib/pkgconfig'
      run: |
        git clone --depth 1 https://github.com/AOMediaCodec/libavif.git
        cd libavif
        mkdir build && cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release -DAVIF_CODEC_DAV1D=ON -DBUILD_SHARED_LIBS=OFF -DAVIF_CODEC_AOM=OFF -DCMAKE_INSTALL_PREFIX=${{ github.workspace }}/${{ env.VCPKG_INSTALLED_DIR }}/${{ env.VCPKG_DEFAULT_TRIPLET }} -DCMAKE_INCLUDE_PATH=${{ github.workspace }}/${{ env.VCPKG_INSTALLED_DIR }}/${{ env.VCPKG_DEFAULT_TRIPLET }}/include
    
    - name: build libavif
      working-directory: ./libavif/build
      run: |
        cmake --build . --config Release
        cmake --install .
      
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.0.0
      with:
        name: Artifacts
        path: |
          ${{ env.VCPKG_INSTALLED_DIR }}/${{ env.VCPKG_DEFAULT_TRIPLET }}/*
      
