name: UpdateThirdParty

on:
  workflow_dispatch:

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  VCPKG_INSTALLED_DIR: '${{ github.workspace }}/installed'
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: make dir
      run: 'mkdir ${{ env.VCPKG_INSTALLED_DIR }}'
    
    - name: run-vcpkg
      uses: lukka/run-vcpkg@v10.2
      id: runvcpkg
      with:
          runVcpkgInstall: true
          vcpkgGitCommitId: 'bf43f7d00f09b225f866a5227b8464a27c86a8c0'
          runVcpkgFormatString: '[`install`, `--clean-after-build`, `--x-install-root`, `$[env.VCPKG_INSTALLED_DIR]`, `--triplet`, `$[env.VCPKG_DEFAULT_TRIPLET]`]'
    
#     - name: build libavif
#       env: 
#         PKG_CONFIG_PATH : '${{ github.workspace }}/vcpkg/installed/x64-windows/lib/pkgconfig'
#       run: |
#         git clone --depth 1 https://github.com/AOMediaCodec/libavif.git
#         cd libavif
#         mkdir build && cd build
#         cmake .. -DCMAKE_BUILD_TYPE=Release -DAVIF_CODEC_DAV1D=ON
#         make -j $(($(nproc) + 1))
#         cd ../..
        
        
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.0.0
      with:
        name: Artifacts
        path: |
          ${{ github.workspace }}/vcpkg/installed/*
          ${{ env.VCPKG_INSTALLED_DIR }}/*
          libavif/build/*
      
